{"version":3,"sources":["components/main.js","App.js","reportWebVitals.js","index.js"],"names":["providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","web3Modal","Web3Modal","network","cacheProvider","connect","a","Web3","provider","home","className","href","target","rel","onClick","getLibrary","proidver","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"q3BAKMA,EAAkB,CACpBC,cAAe,CACXC,QAASC,IACTC,QAAS,CACLC,SAAU,eAKhBC,EAAY,IAAIC,IAAU,CAC5BC,QAAS,UACTC,eAAe,EACfT,oBAGEU,EAAO,uCAAG,sBAAAC,EAAA,+EAEeL,EAAUI,UAFzB,+IAAH,qDASA,IAAIE,IAzBbC,WA4BW,SAASC,IACpB,OACI,qBAAKC,UAAU,MAAf,SACI,yBAAQA,UAAU,aAAlB,UACI,sCACS,8CADT,0BAGA,mBACIA,UAAU,WACVC,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJR,yBAQA,wBAAQC,QAAST,EAAjB,2BCzChB,SAASU,EAAYC,GACjB,OAAO,IAAIT,IAAKS,GAcLC,MAXf,WAII,OACI,cAAC,IAAD,CAAmBF,WAAYA,EAA/B,SACI,cAAC,EAAD,OCJGG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5c78de52.chunk.js","sourcesContent":["import Web3 from \"web3\";\r\nimport Web3Modal from \"web3modal\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\n\r\nlet provider;\r\nconst providerOptions = {\r\n    walletconnect: {\r\n        package: WalletConnectProvider, // required\r\n        options: {\r\n            infuraId: \"INFURA_ID\" // required\r\n        }\r\n    }\r\n};\r\n\r\nconst web3Modal = new Web3Modal({\r\n    network: \"mainnet\", // optional\r\n    cacheProvider: true, // optional\r\n    providerOptions // required\r\n});\r\n\r\nconst connect = async () => {\r\n    try {\r\n        const provider = await web3Modal.connect();\r\n    } catch (e) {\r\n        return\r\n    }\r\n};\r\n\r\n\r\nconst web3 = new Web3(provider);\r\n\r\n\r\nexport default function home() {\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <p>\r\n                    Edit <code>src/App.js</code> and save to reload.\r\n                </p>\r\n                <a\r\n                    className=\"App-link\"\r\n                    href=\"https://reactjs.org\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                >\r\n                    Learn React\r\n                </a>\r\n                <button onClick={connect}> connect</button>\r\n            </header>\r\n        </div>\r\n    );\r\n}","import './App.css';\n\nimport {Web3ReactProvider} from \"@web3-react/core\";\nimport Home from \"./components/main\";\nimport Web3 from 'web3';\n\nfunction getLibrary (proidver){\n    return new Web3(proidver);\n}\n\nfunction App() {\n    function connect(){\n\n    }\n    return (\n        <Web3ReactProvider getLibrary={getLibrary}>\n            <Home/>\n        </Web3ReactProvider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}